#ifndef _UNIRENDER_TYPEDEF_H_
#define _UNIRENDER_TYPEDEF_H_

namespace ur
{

enum BUFFER_TYPE {
	BUFFER_VERTEX = 0,
	BUFFER_INDEX,
};

enum BUFFER_USAGE {
	USAGE_STATIC = 0,
	USAGE_DYNAMIC,
	USAGE_STREAM
};

enum RENDER_OBJ {
	INVALID = 0,
	VERTEXLAYOUT = 1,
	VERTEXBUFFER = 2,
	INDEXBUFFER = 3,
	TEXTURE = 4,
	TARGET = 5,
	SHADER = 6,
};

enum TEXTURE_TYPE {
	TEXTURE_2D = 0,
    TEXTURE_3D,
	TEXTURE_CUBE,
};

enum TEXTURE_FORMAT {
	TEXTURE_INVALID = 0,
	TEXTURE_RGBA8,
	TEXTURE_RGBA4,
	TEXTURE_RGB,
	TEXTURE_RGB565,
	TEXTURE_BGRA_EXT,
	TEXTURE_BGR_EXT,
    TEXTURE_RGB16F,
    TEXTURE_RGB32F,
    TEXTURE_RG16F,
	TEXTURE_A8,
	TEXTURE_DEPTH,	// use for render target
	TEXTURE_PVR2,
	TEXTURE_PVR4,
	TEXTURE_ETC1,
	TEXTURE_ETC2,
	TEXTURE_COMPRESSED_RGBA_S3TC_DXT1_EXT,
	TEXTURE_COMPRESSED_RGBA_S3TC_DXT3_EXT,
	TEXTURE_COMPRESSED_RGBA_S3TC_DXT5_EXT,
};

enum BLEND_FORMAT {
	BLEND_DISABLE = 0,
	BLEND_ZERO,
	BLEND_ONE,
	BLEND_SRC_COLOR,
	BLEND_ONE_MINUS_SRC_COLOR,
	BLEND_SRC_ALPHA,
	BLEND_ONE_MINUS_SRC_ALPHA,
	BLEND_DST_ALPHA,
	BLEND_ONE_MINUS_DST_ALPHA,
	BLEND_DST_COLOR,
	BLEND_ONE_MINUS_DST_COLOR,
	BLEND_SRC_ALPHA_SATURATE,
};

enum BLEND_FUNC {
	BLEND_FUNC_ADD = 0,
	BLEND_FUNC_SUBTRACT,
	BLEND_FUNC_REVERSE_SUBTRACT,
    BLEND_MIN,
    BLEND_MAX,
};

enum ALPHA_FUNC {
	ALPHA_DISABLE = 0,
	ALPHA_NEVER,
	ALPHA_LESS,
	ALPHA_EQUAL,
	ALPHA_LEQUAL,
	ALPHA_GREATER,
	ALPHA_NOTEQUAL,
	ALPHA_GEQUAL,
	ALPHA_ALWAYS,
};

enum DEPTH_FORMAT {
	DEPTH_DISABLE = 0,
	DEPTH_LESS_EQUAL,
	DEPTH_LESS,
	DEPTH_EQUAL,
	DEPTH_GREATER,
	DEPTH_GREATER_EQUAL,
	DEPTH_ALWAYS,
    DEPTH_NOT_EQUAL,
    DEPTH_NEVER,
};

enum CLEAR_MASK {
	MASKC = 0x1,
	MASKD = 0x2,
	MASKS = 0x4,
};

enum UNIFORM_FORMAT {
	UNIFORM_INVALID = 0,
	UNIFORM_FLOAT1,
	UNIFORM_FLOAT2,
	UNIFORM_FLOAT3,
	UNIFORM_FLOAT4,
	UNIFORM_FLOAT33,
	UNIFORM_FLOAT44,
	UNIFORM_INT1,
	UNIFORM_MULTI_FLOAT44
};

enum DRAW_MODE {
	DRAW_POINTS = 0,
	DRAW_LINES,
	DRAW_LINE_LOOP,
	DRAW_LINE_STRIP,
	DRAW_TRIANGLES,
	DRAW_TRIANGLE_STRIP,
	DRAW_TRIANGLE_FAN,
	DRAW_QUADS,
};

enum CULL_MODE {
	CULL_DISABLE = 0,
	CULL_FRONT,
	CULL_BACK,
    CULL_FRONT_AND_BACK,
};

enum POLYGON_MODE
{
	POLYGON_POINT = 0,
	POLYGON_LINE,
	POLYGON_FILL,
};

enum ACCESS_MODE
{
	READ_ONLY = 0,
	WRITE_ONLY,
	READ_WRITE,
};

enum ATTACHMENT_TYPE
{
    ATTACHMENT_COLOR0 = 0,
    ATTACHMENT_DEPTH,
    ATTACHMENT_STENCIL,
};

enum TEXTURE_TARGET
{
    TEXTURE2D = 0,
    TEXTURE_CUBE0,
    TEXTURE_CUBE1,
    TEXTURE_CUBE2,
    TEXTURE_CUBE3,
    TEXTURE_CUBE4,
    TEXTURE_CUBE5,
};

enum TEXTURE_WRAP
{
    TEXTURE_REPEAT,
    TEXTURE_MIRRORED_REPEAT,
    TEXTURE_CLAMP_TO_EDGE,
    TEXTURE_CLAMP_TO_BORDER,
};

enum TEXTURE_FILTER
{
    TEXTURE_NEAREST,
    TEXTURE_LINEAR,
};

enum INTERNAL_FORMAT
{
    FMT_ALPHA,
    FMT_ALPHA4,
    FMT_ALPHA8,
    FMT_ALPHA12,
    FMT_ALPHA16,
    FMT_COMPRESSED_ALPHA,
    FMT_COMPRESSED_LUMINANCE,
    FMT_COMPRESSED_LUMINANCE_ALPHA,
    FMT_COMPRESSED_INTENSITY,
    FMT_COMPRESSED_RGB,
    FMT_COMPRESSED_RGBA,
    FMT_DEPTH_COMPONENT,
    FMT_DEPTH_COMPONENT16,
    FMT_DEPTH_COMPONENT24,
    FMT_DEPTH_COMPONENT32,
    FMT_LUMINANCE,
    FMT_LUMINANCE4,
    FMT_LUMINANCE8,
    FMT_LUMINANCE12,
    FMT_LUMINANCE16,
    FMT_LUMINANCE_ALPHA,
    FMT_LUMINANCE4_ALPHA4,
    FMT_LUMINANCE6_ALPHA2,
    FMT_LUMINANCE8_ALPHA8,
    FMT_LUMINANCE12_ALPHA4,
    FMT_LUMINANCE12_ALPHA12,
    FMT_LUMINANCE16_ALPHA16,
    FMT_INTENSITY,
    FMT_INTENSITY4,
    FMT_INTENSITY8,
    FMT_INTENSITY12,
    FMT_INTENSITY16,
    FMT_R3_G3_B2,
    FMT_RGB,
    FMT_RGB4,
    FMT_RGB5,
    FMT_RGB8,
    FMT_RGB10,
    FMT_RGB12,
    FMT_RGB16,
    FMT_RGBA,
    FMT_RGBA2,
    FMT_RGBA4,
    FMT_RGB5_A1,
    FMT_RGBA8,
    FMT_RGB10_A2,
    FMT_RGBA12,
    FMT_RGBA16,
    FMT_SLUMINANCE,
    FMT_SLUMINANCE8,
    FMT_SLUMINANCE_ALPHA,
    FMT_SLUMINANCE8_ALPHA8,
    FMT_SRGB,
    FMT_SRGB8,
    FMT_SRGB_ALPHA,
    FMT_SRGB8_ALPHA8
};

}

#endif // _UNIRENDER_TYPEDEF_H_